apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-stack
  labels:
    app: grafana-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-stack
  template:
    metadata:
      labels:
        app: grafana-stack #not finished, labels need to placed here to be
        # attaced to the containers
    spec:
      containers:
      - name: grafana
        image: docker.io/grafana/grafana:latest
        securityContext:
          runAsUser: 1000
        volumeMounts:
          - mountPath: /etc/grafana/grafana.ini:Z
            name: grafana-config
          - mountPath: /var/lib/grafana:Z
            name: grafana
        labels:
          traefik.enable: true
          traefik.http.routers.grafana.rule: Host'(`grafana.service.example.org`)'
          traefik.http.routers.grafana.entrypoints: "http,https"
          traefik.http.services.grafana.loadbalancer.server.port: "3000" 
          traefik.http.routers.grafana.service: grafana
          traefik.http.services.grafana.loadbalancer.server.scheme: http
      - name: mimir
        image: docker.io/grafana/mimir:latest
        args:
        - --config.file=/mnt/config/mimir-local-config.yaml
        ports:
          - containerPort: 9095
            hostPort: 9095
            protocol: TCP
        volumeMounts:
          - mountPath: /tmp/mimir:Z
            name: mimir
          - mountPath: /mnt/config/mimir-local-config.yaml:Z
            name: mimir-config
        labels:
          traefik.enable: true
          traefik.http.routers.grafana-mimir.rule: Host'(`grafana-mimir.service.example.org`)'
          traefik.http.routers.grafana-mimir.entrypoints: 'http,https'
          traefik.http.services.grafana-mimir.loadbalancer.server.port: 9009 
          traefik.http.routers.grafana-mimir.service: grafana-mimir
          traefik.http.services.grafana-mimir.loadbalancer.server.scheme: http
      - name: loki
        image: docker.io/grafana/loki:latest
        args:
        - --config.file=/mnt/config/loki-local-config.yaml
        securityContext:
          runAsUser: 1000
        ports:
          - containerPort: 9096
            hostPort: 9096
            protocol: TCP
        volumeMounts:
          - mountPath: /tmp/loki:Z
            name: loki
          - mountPath: /mnt/config/loki-local-config.yaml:Z
            name: loki-config
        labels:
          traefik.enable: true
          traefik.http.routers.grafana-loki.rule: Host'(`grafana-loki.service.example.org`)'
          traefik.http.routers.grafana-loki.entrypoints: 'http,https'
          traefik.http.services.grafana-loki.loadbalancer.server.port: 3100 
          traefik.http.routers.grafana-loki.service: 'grafana-loki'
          traefik.http.services.grafana-loki.loadbalancer.server.scheme: 'http'
      - name: tempo
        image: docker.io/grafana/tempo:latest
        args:
        - --config.file=/mnt/config/tempo-local-config.yaml
        ports:
          - containerPort: 4317
            hostPort: 4317
            protocol: TCP
          - containerPort: 4318
            hostPort: 4318
            protocol: TCP
          - containerPort: 9097
            hostPort: 9097
            protocol: TCP
          - containerPort: 9411
            hostPort: 9411
            protocol: TCP
          - containerPort: 14268
            hostPort: 14268
            protocol: TCP
        volumeMounts:
          - mountPath: /tmp/tempo:Z
            name: tempo
          - mountPath: /mnt/config/tempo-local-config.yaml:Z
            name: tempo-config
        labels:
          traefik.enable: true
          traefik.http.routers.grafana-tempo.rule: Host'(`grafana-tempo.service.example.org`)'
          traefik.http.routers.grafana-tempo.entrypoints: "http,https"
          traefik.http.services.grafana-tempo.loadbalancer.server.port: 3200 
          traefik.http.routers.grafana-tempo.service: grafana-tempo
          traefik.http.services.grafana-tempo.loadbalancer.server.scheme: http
      volumes:
      - hostPath:
          path: ./grafana/data
          type: Directory
        name: grafana
      - hostPath:
          path: ./grafana/grafana.ini
          type: File
        name: grafana-config
      - hostPath:
          path: ./mimir/data
          type: Directory
        name: mimir
      - hostPath:
          path: ./mimir/mimir-local-config.yaml
          type: File
        name: mimir-config
      - hostPath:
          path: ./loki/data
          type: Directory
        name: loki
      - hostPath:
          path: ./loki/loki-local-config.yaml
          type: File
        name: loki-config
      - hostPath:
          path: ./tempo/data
          type: Directory
        name: tempo
      - hostPath:
          path: ./tempo/tempo-local-config.yaml
          type: File
        name: tempo-config
